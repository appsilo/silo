#!/usr/bin/env python3

import importlib, pkgutil, argparse
from Hako import Commands

# To Do:
# Set up command-specific arguments and options with argparse
# Pretty printing / console print colors
# Add support for app-level commands 
# Extract loader stuff to console kernel file and clean up this one

def loadCommands(commands):
    loaded = {}
    for (importer, modname, ispkg) in pkgutil.walk_packages(commands.__path__, commands.__name__ + '.'):
        if not ispkg:
            module = getattr(importlib.import_module(modname), modname.split('.')[-1])
            cmd = module()
            loaded[cmd.signature] = {
                'module': module,
                'signature': cmd.signature,
                'description': 'example description'
            }
    return loaded


cmds = loadCommands(Commands)

parser = argparse.ArgumentParser(description='Zen CLI')
parser.add_argument('command', help='Name of the command you would like to run.')
args, unknown = parser.parse_known_args()
# print(cmds)
# print(args.command)

try:
    cmd = cmds[args.command]
    # Todo: use argparse to add command-specific arguments and options here
    cmd['module']().handle()
except KeyError as e:
    print('Command %s could not be found, are you sure it is registered correcty?' % (args.command))
    # raise e
